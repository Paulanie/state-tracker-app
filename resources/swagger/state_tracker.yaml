openapi: 3.0.3
info:
  title: state-tracker-backend
  description: ''
  license:
    name: ''
  version: 0.1.0
paths:
  /actors:
    get:
      tags:
        - actors
      operationId: list_actors
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
            minimum: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int64
            minimum: 0
        - name: ordering
          in: query
          required: false
          schema:
            type: string
            nullable: true
        - name: sort_order
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrder'
      responses:
        '200':
          description: The actors found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActorsPageResult'
        '500':
          description: Internal server error.
  /actors/{id}:
    get:
      tags:
        - actors
      operationId: get_actor
      parameters:
        - name: id
          in: path
          description: The id of the actor
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The actor with the requested ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActorsDTO'
        '404':
          description: Actor not found
        '500':
          description: Internal server error
  /amendments:
    get:
      tags:
        - amendments
      operationId: list_amendments
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
            minimum: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int64
            minimum: 0
        - name: ordering
          in: query
          required: false
          schema:
            type: string
            nullable: true
        - name: sort_order
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrder'
      responses:
        '200':
          description: The amendments found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmendmentsPageResult'
        '500':
          description: Internal server error.
  /amendments/{id}:
    get:
      tags:
        - amendments
      operationId: get_amendment
      parameters:
        - name: id
          in: path
          description: The id of the amendment
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The amendment with the requested ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmendmentsDTO'
        '404':
          description: Amendment not found.
        '500':
          description: Internal server error.
components:
  schemas:
    ActorsAddressesDTO:
      type: object
      required:
        - websites
        - mail_addresses
        - phone_numbers
        - addresses
      properties:
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/AddressDTO'
        mail_addresses:
          type: array
          items:
            type: string
        phone_numbers:
          type: array
          items:
            type: string
        websites:
          type: array
          items:
            type: string
    ActorsDTO:
      type: object
      required:
        - uid
        - title
        - surname
        - name
        - alpha
        - trigram
      properties:
        addresses:
          allOf:
            - $ref: '#/components/schemas/ActorsAddressesDTO'
          nullable: true
        alpha:
          type: string
        birthdate:
          type: string
          format: date-time
          nullable: true
        birthplace:
          type: string
          nullable: true
        deathDate:
          type: string
          format: date-time
          nullable: true
        name:
          type: string
        profession:
          allOf:
            - $ref: '#/components/schemas/ProfessionsDTO'
          nullable: true
        surname:
          type: string
        title:
          type: string
        trigram:
          type: string
        uid:
          type: string
        uriHatvp:
          type: string
          nullable: true
    ActorsPageResult:
      type: object
      required:
        - total
        - pages
        - page_no
        - page_size
        - records
      properties:
        page_no:
          type: integer
          format: int64
          minimum: 0
        page_size:
          type: integer
          format: int64
          minimum: 0
        pages:
          type: integer
          format: int64
          minimum: 0
        records:
          type: array
          items:
            $ref: '#/components/schemas/ActorsDTO'
        total:
          type: integer
          format: int64
          minimum: 0
    AddressDTO:
      type: object
      required:
        - streetNumber
        - streetName
        - zipCode
        - city
        - affiliatePhoneNumbers
        - affiliateMailAddresses
      properties:
        affiliateMailAddresses:
          type: array
          items:
            type: string
        affiliatePhoneNumbers:
          type: array
          items:
            type: string
        city:
          type: string
        streetName:
          type: string
        streetNumber:
          type: string
        zipCode:
          type: string
    AmendmentsDTO:
      type: object
      required:
        - uid
        - examinationRef
        - triAmendment
        - legislativeTextRef
        - state
        - representation
        - article99
      properties:
        article99:
          type: boolean
        deliveryDate:
          type: string
          format: date-time
          nullable: true
        examinationRef:
          type: string
        legislativeTextRef:
          type: string
        publicationDate:
          type: string
          format: date-time
          nullable: true
        representation:
          type: string
        sortDate:
          type: string
          format: date-time
          nullable: true
        state:
          type: string
        subState:
          type: string
          nullable: true
        triAmendment:
          type: string
        uid:
          type: string
    AmendmentsPageResult:
      type: object
      required:
        - total
        - pages
        - page_no
        - page_size
        - records
      properties:
        page_no:
          type: integer
          format: int64
          minimum: 0
        page_size:
          type: integer
          format: int64
          minimum: 0
        pages:
          type: integer
          format: int64
          minimum: 0
        records:
          type: array
          items:
            $ref: '#/components/schemas/AmendmentsDTO'
        total:
          type: integer
          format: int64
          minimum: 0
    ProfessionsDTO:
      type: object
      required:
        - family
        - category
      properties:
        category:
          type: string
        family:
          type: string
        name:
          type: string
          nullable: true
    SortOrder:
      type: string
      enum:
        - asc
        - desc